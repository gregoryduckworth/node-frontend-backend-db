services:
  db:
    image: postgres:17
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} -h localhost || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: node:lts
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    command: sh -c "npm install && npx prisma generate && npx prisma db push && npx ts-node prisma/seed.ts && npm run dev"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:${PORT:-3001}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    image: node:lts
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    command: sh -c "npm install && npm run dev"
    env_file:
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_healthy

  admin-frontend:
    image: node:lts
    working_dir: /app
    volumes:
      - ./admin-frontend:/app
      - /app/node_modules
    ports:
      - "${VITE_PORT:-5174}:${VITE_PORT:-5174}"
    command: sh -c "npm install && npm run dev"
    env_file:
      - ./admin-frontend/.env
    depends_on:
      backend:
        condition: service_healthy

volumes:
  db_data: {}
